# Building wheels for Linux and MacOS platforms
language: python

matrix:
  include:
    # Job generating the wheels for Linux 32bit platforms
    - sudo: required
      env:
        - CIBW_SKIP=*manylinux1_i686*
        - PIP=pip
        - PYTHON=python
      services:
        # We use docker for generating the wheels for Linux.
        - docker
    # Job generating the wheels for Linux 64bit platforms
    - sudo: required
      env:
        - CIBW_SKIP=*manylinux1_x86_64*
        - PIP=pip
        - PYTHON=python
      services:
        # We use docker for generating the wheels for Linux.
        - docker
    - os: osx
      language: generic
      env:
        - PIP=pip2
        - PYTHON=python2

env:
  global:
    - TWINE_USERNAME=bmatthieu3

script:
  - $PIP install cibuildwheel==0.10.0 setuptools-rust
  - export CIBW_BEFORE_BUILD="pip install setuptools-rust && source {project}/install_cargo.sh"
  - export CIBW_ENVIRONMENT='PATH="$HOME/.cargo/bin:$PATH"'
  - cibuildwheel --output-dir dist
  # Run some tests
  - $PIP install pytest cffi
  - curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain nightly -y
  - export PATH="$HOME/.cargo/bin:$PATH"
  - $PYTHON setup.py build_rust
  - find build/ -name "*.so" -type f -exec cp {} ./rust_pypi \;
  - $PYTHON -m pytest -v rust_pypi

after_success:
  - $PIP install twine
  - $PYTHON -m twine upload --repository-url https://upload.pypi.org/legacy/ dist/*.whl